import (
	"context"
	"os"
	"github.com/goplus/builder/internal/core"
)

var (
	p *core.Project
)

todo := context.TODO()

get "/project/:id", ctx => {
	id := ctx.param("id")
	res, _ := p.FileInfo(todo, id)
	ctx.json {
		"code":200,
		"msg":"OK",
		"data":{"id":res.ID,"address":os.Getenv("QINIU_PATH")+res.Address,},
	}
}

post "/project/save", ctx=>{
	id := ctx.FormValue("id")
	uid := ctx.FormValue("uid")
	name:=ctx.FormValue("name") 
	file,header,_:=ctx.FormFile("file")
	codeFile:=&core.CodeFile{
		ID:id,
		Name:name,
		AuthorId :uid,
	}
	res,_ := p.SaveProject(todo,codeFile,file,header)
	ctx.json {
		"code":200,
		"msg":"ok",
		"data":{"id":res.ID,"address":os.Getenv("QINIU_PATH")+res.Address,},
	}
}


post "/project/fmt", ctx=>{
	ctx.ResponseWriter.Header().Set("Access-Control-Allow-Origin", "*")
	ctx.ResponseWriter.Header().Set("Content-Type", "application/json")
	body := ctx.FormValue("body")
	imports := ctx.FormValue("import")
	res := p.CodeFmt(todo,body,imports)
	ctx.json {
		"code":200,
		"msg":"ok",
		"data":res,
	}
}

get "/asset/:id", ctx => {
    ctx.ResponseWriter.Header().Set("Access-Control-Allow-Origin", "*")
	ctx.ResponseWriter.Header().Set("Content-Type", "application/json")
    id := ctx.param("id")
    asset, _ := p.Asset(todo, id)
    ctx.json {
    		"code":200,
    		"msg":"ok",
    		"data":{"asset": asset},
    }
}

get "/list/asset/:pageIndex/:pageSize/:assetType", ctx => {
    ctx.ResponseWriter.Header().Set("Access-Control-Allow-Origin", "*")
	ctx.ResponseWriter.Header().Set("Content-Type", "application/json")
    pageIndex := ctx.param("pageIndex")
    pageSize := ctx.param("pageSize")
    assetType := ctx.param("assetType")
    result, _ := p.AssetList(todo, pageIndex, pageSize, assetType)
    ctx.json {
            "code":200,
            "msg":"ok",
            "data": result,
    }
}

conf := &core.Config{}
p, _ = core.New(todo, conf)

run ":8080"